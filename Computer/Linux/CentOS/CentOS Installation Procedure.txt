Notice: This procedure should not contain specialized settings

---------------------Preparation Task---------------------

Download and burn the latest OS installation disc
Decide the partition layout

---------------------OS Installation---------------------

Configure the following options
	# English (Hong Kong SAR) is not used as installation language to avoid incompatibility.
	Installation Language: English (United States)
	Date & Time: Asia/Hong Kong timezone
	Keyboard: English (US)
	Language Support:
		English (United States)
		English (Hong Kong SAR China)
		Chinese (China)
		Chinese (Hong Kong SAR China)
		Japanese (Japan)
	Installation Source: Local media
	Software Selection:
		Base Environment: Infrastructure Server
		Add-Ons:
			Hardware Monitoring Utilities
Set up network and hostname
	Set hostname
	(If needed) Set Ethernet device, only required for access mode direct connect, no need to set if interface is used by team or VLAN
		General:
			Automatically connect to this network when it is available: Checked
			All users may connect to this network: Checked
			# The following setting is the same as "Never use this network for default route" in nmtui
			(If needed) Never use this network for default route: Checked
		IPv4 Settings:
			Routes:
				(If needed, for non-default route interface) Use this connection only for resources on its network: Checked
		IPv6 Settings:
			Method: Ignore
	(If needed) Add team device
		Connection name: team0
		General:
			# The following setting is required too for VLAN running on this team device
			Automatically connect to this network when it is available: Checked
		Team:
			Interface name: team0
			Teamed connections:
				Conncetion 1:
					Connection type: Ethernet
					Connection name: team0s1
					General:
						Automatically connect to this network when it is available: Checked
					Ethernet:
						Device: (Set to the device name of port 1 of the server)
				Connection 2:
					Connection type: Ethernet
					Connection name: team0s2
					General:
						Automatically connect to this network when it is available: Checked
					Ethernet:
						Device: (Set to the device name of port 2 of the server)
			JSON config
				# (By default the team device and all ports will use the same MAC address)
				{"runner": {"name": "activebackup"}, "link_watch": {"name": "ethtool"}}
				# (In case the above failed to work, try this one which works on VirtualBox host-only adapter. The team device will use MAC address of the active NIC.)
				{"runner": {"name": "activebackup", "hwaddr_policy": "by_active"}, "link_watch": {"name": "ethtool"}}
		IPv4 Settings:
			(If VLAN is used on this interface) Method: Disabled
		IPv6 Settings:
			Method: Ignore
	(If needed) Add VLAN
		Connection name: xxxxxxxx.yyyyyyyy
		General:
			Automatically connect to this network when it is available: Checked
		VLAN:
			Parent interface: xxxxxxxx (Set to the used device name)
			VLAN id: yyyyyyyy
			VLAN interface name: xxxxxxxx.yyyyyyyy
		IPv4 Settings:
			Routes:
				(If needed, for non-default route interface) Use this connection only for resources on its network: Checked
		IPv6 Settings:
			Method: Ignore
(If needed) Set up Network Time (This will use chrony suite, which is recommended for all systems which are frequently suspended or otherwise intermittently disconnected and reconnected to a network such as mobile and virtual systems. Do not set up network time during installation if you would like to use ntpd, which is for systems which are normally kept permanently on)
	(If needed) Uncheck all checkbox in column "Use" in "Add and mark for usage NTP servers" dialog
	(If needed) Input NTP server address and press the add button
Set partition layout, reference https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Installation_Guide/sect-disk-partitioning-setup-x86.html#sect-recommended-partitioning-scheme-x86
	/boot                     Defaut size
	LVM                       Remaining space
		/                     At least 5GB, recommended at least 10GB
		/home                 At least 1GB
		/tmp                  Minimum 50MB
		/var                  At least 3GB
		/var/log              At least 1GB
		/var/log/audit        At least 250MB
		swap                  At least 1GB
Set root password
(If needed) Set user creation

---------------------Configure Backup Alias---------------------

# (If needed) Add backup command alias
cat >> ~/.bashrc <<EOF

#-------------------------------------------------------------------------------
# Our alias
#-------------------------------------------------------------------------------
mkbak() {
	cp -pv "\$1" "\$1.\$(date +"%Y%m%d%H%M%S").bak"
}
EOF
source ~/.bashrc

---------------------Network Configuration---------------------

# (If needed) Modify NIC and DNS setting using NetworkManager, required NetworkManager running, can be stopped after edit
nmtui

# (If needed) Disable desktop oriented NetworkManager to avoid trouble caused by it
# For example with NetworkManager in use, if ethernet is not plugged in when server boot, team connection will not be function even ethernet is plugged in later, because the corresponding port is not enabled in team connection
systemctl start NetworkManager
systemctl disable NetworkManager

# (If needed) Modify NIC and DNS setting
mkbak /etc/sysconfig/network-scripts/ifcfg-<interface>
vim /etc/sysconfig/network-scripts/ifcfg-<interface>
	# (If needed, for team device) Remove the HWADDR generated by installer in team slave to prevent the generated warning in the log
	# (If needed, for team device) Fix the incorrect TEAM_MASTER entry generated by nmtui. The value should be a device name, not device UUID.

# (If needed) Restart network to apply new changes, works regardless whether NetworkManager is used or not
systemctl restart network

# Check if any error on network interface configuration
less /var/log/messages

# (If needed) Set default gateway for multi-subnet connected server
# Reference https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html-single/Networking_Guide/
vim /etc/sysconfig/network-scripts/ifcfg-<interface>
	DEFROUTE=yes

# (If needed) Configure proxy
mkbak /etc/environment
vim /etc/environment
	# Include the following lines
	export http_proxy='http://proxy.example.com:8080/'
	export https_proxy='http://proxy.example.com:8080/'

---------------------Network Start Stop---------------------

# Disable interface
ip link set dev eth1 down

# Enable interface
ip link set dev eth1 up

# Start DHCP client (Just need to disconnect all cables used by static IP, no need to disable all network interfaces)
dhclient

# Stop DHCP client
killall dhclient

---------------------Check Network Status---------------------

# Check link and IP
ip addr show

# Check link
ip link show

# Check routing
ip route

# Check team status and test active-backup by unplug Ethernet cable
teamdctl team0 state

# Check team port link speed
teamnl team0 ports

---------------------Firewall Configuration---------------------

# Get the status of firewalld
firewall-cmd --state

# Get a list of all supported zones
firewall-cmd --get-zones

# Get active zones
firewall-cmd --get-active-zones

# Query if an interface is in a zone
firewall-cmd [--permanent] --get-zone-of-interface=<interface>
firewall-cmd [--permanent] [--zone=<zone>] --query-interface=<interface>

# Change the zone of an interface belongs to (it may not work on Ethernet device due to a bug described at https://bugs.centos.org/view.php?id=7526)
firewall-cmd [--permanent] [--zone=<zone>] --change-interface=<interface>

# (If needed) Set the zone of an interface in ifcfg file
cat "/etc/sysconfig/network-scripts/ifcfg-<interface>"
echo "ZONE=<zone>" >> "/etc/sysconfig/network-scripts/ifcfg-<interface>"
cat "/etc/sysconfig/network-scripts/ifcfg-<interface>"

# Apply change after zone is set in ifcfg
systemctl restart network

# Print zone <zone> with the enabled features
firewall-cmd [--permanent] [--zone=<zone>] --list-all

# Add a new zone using a XML template
cp new_zone.xml /etc/firewalld/zones/<zone>.xml
restorecon /etc/firewalld/zones/<zone>.xml
chcon -u system_u /etc/firewalld/zones/<zone>.xml

# Add a new zone
firewall-cmd --permanent --new-zone=<zone>

# Delete a new zone
firewall-cmd --permanent --delete-zone=<zone>

# To get the list of the sources currently bound to a zone
firewall-cmd [--permanent] --zone=<zone> --list-sources

# Add a source to a zone
# To get this feature, Firewalld relies on NetworkManager
firewall-cmd [--permanent] --zone=<zone> --add-source=<ip>/<netmask>

# To get the list of services bound to a zone
firewall-cmd [--permanent] --zone=<zone> --list-services

# Get a list of supported permanent services
firewall-cmd [--permanent] --get-services

# Add a service in a zone
firewall-cmd [--permanent] [--zone=<zone>] --add-service=<service>

# Remove a service in a zone
firewall-cmd [--permanent] [--zone=<zone>] --remove-service=<service>

# Add new service
firewall-cmd --permanent --new-service=<service>
chmod 640 /etc/firewalld/services/<service>.xml

# Add a new user-defined service using a XML template
cp /usr/lib/firewalld/services/mysql.xml /etc/firewalld/services/<service>.xml
restorecon /etc/firewalld/services/<service>.xml
chcon -u system_u /etc/firewalld/services/<service>.xml
vim /etc/firewalld/services/<service>.xml

# Remove an existing user-defined service
firewall-cmd --permanent --delete-service=<service>

# Enable a port and protocol combination in a zone
firewall-cmd [--permanent] [--zone=<zone>] --add-port=<port>[-<port>]/<protocol>

# Remove a port and protocol combination in a zone
firewall-cmd [--permanent] [--zone=<zone>] --remove-port=<port>[-<port>]/<protocol>

# Enable a source address in a zone
firewall-cmd [--permanent] [--zone=<zone>] --add-rich-rule="rule family="ipv4" source address="<address>/<netmask>" accept"

# Disable a source address in a zone
firewall-cmd [--permanent] [--zone=<zone>] --remove-rich-rule="rule family="ipv4" source address="<address>/<netmask>" accept"

# Reload the firewall without loosing state information
firewall-cmd --reload

# Restart firewalld
systemctl restart firewalld

---------------------NTP Configuration---------------------

# (If needed) Disable and remove chronyd
yum autoremove chrony
rm -i /etc/chrony.keys.rpmsave
rmdir /var/log/chrony

# (If needed) Set up NTP using ntpd (For systems which are normally kept permanently on)
yum install ntp
mkbak /etc/ntp.conf
vim /etc/ntp.conf
	# Comment out CentOS public NTP server
	# Include the following line, where xxx.xxx.xxx.xxx is the NTP server address
	server xxx.xxx.xxx.xxx iburst
systemctl enable ntpd
systemctl start ntpd

# (If needed) Modify NTP for chronyd
mkbak /etc/chrony.conf
vim /etc/chrony.conf
	# Include or modify the following line
	server <host> iburst

---------------------NTP Testing---------------------

# Check if NTP host is reachable
ntpdate -d <host>

# Show ntpd status
ntpstat

# Force NTP to sync with given NTP host
systemctl stop ntpd
ntpdate -s <host>
systemctl start ntpd

# Display system time information including NTP sync status
chronyc tracking

# Display information about current sources
chronyc sources -v

---------------------YUM Repo---------------------

# Create folder for backup RPM which are installed outside YUM repo
mkdir -p /root/conf/rpm

# Install remi 3rd party yum repo
# Official website http://rpms.famillecollet.com/
# (Reference only, download link may change) Download yum repo RPM
wget -P /root/conf/rpm -N "http://rpms.famillecollet.com/enterprise/remi-release-7.rpm"
# (Reference only, filename may change) Install yum repo RPM
yum install remi-release-7.rpm
# (If needed) Change the PHP version
mkbak /etc/yum.repos.d/remi.repo
vim /etc/yum.repos.d/remi.repo
mkbak /etc/yum.repos.d/remi-php70.repo
vim /etc/yum.repos.d/remi-php70.repo

# Install MySQL yum repo
# Official website http://dev.mysql.com/downloads/repo/yum/
# (Reference only, download link may change) Download yum repo RPM
wget -P /root/conf/rpm -N "http://dev.mysql.com/get/mysql57-community-release-el7-7.noarch.rpm"
# (Reference only, filename may change) Install yum repo RPM
yum install mysql57-community-release-el7-7.noarch.rpm

---------------------Package Update---------------------

# Update packages
yum update

# (If needed) Update packages using no timeout setting, useful update via proxy
yum --setopt=timeout=0 update

# (If needed, especially when kernel is updated) Reboot server
reboot

# (If needed) Remove packages which are not installed by users and are not depend by other packages
yum autoremove

---------------------Server Management---------------------

# (If needed) Generate new host ID
genhostid

---------------------Log Retention---------------------

# (If needed) Increase log retention
mkbak /etc/logrotate.conf
sed -i 's/rotate 4/#rotate 4/;/rotate 4/a rotate 13' /etc/logrotate.conf

---------------------Additional Package Install---------------------

# (If needed) Install telnet package
yum install telnet

# (If needed) Install ClamAV antivirus
yum install clamav clamav-update
# Perform immediate update
/usr/bin/freshclam
# Enable automatic update
vim /etc/sysconfig/freshclam
	# Remove line FRESHCLAM_DELAY=disabled-warn
